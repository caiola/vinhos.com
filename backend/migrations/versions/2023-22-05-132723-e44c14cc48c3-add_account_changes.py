"""Add account changes

Revision ID: e44c14cc48c3
Revises: 35de8fdb1f16
Create Date: 2023-05-22 13:27:23.164723

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = "e44c14cc48c3"
down_revision = "35de8fdb1f16"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("account", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("country", sa.String(length=2), nullable=True)
        )
        batch_op.add_column(
            sa.Column("tax_number", sa.String(length=50), nullable=True)
        )
        batch_op.alter_column(
            "address_id",
            existing_type=mysql.BIGINT(display_width=20),
            nullable=True,
            existing_comment="Address id",
        )
        batch_op.alter_column(
            "account_name",
            existing_type=mysql.VARCHAR(length=50),
            type_=sa.String(length=60),
            nullable=True,
            comment="Account can have any name, it is an internal reference",
        )
        batch_op.alter_column(
            "company_name",
            existing_type=mysql.VARCHAR(length=50),
            nullable=True,
        )
        batch_op.drop_index("account_name")
        batch_op.drop_column("nif")
        batch_op.drop_column("name")

    with op.batch_alter_table("ad", schema=None) as batch_op:
        batch_op.drop_index("ad_unique_id_title")
        batch_op.create_unique_constraint(
            "ad_unique_account_id_and_title", ["account_id", "title"]
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("ad", schema=None) as batch_op:
        batch_op.drop_constraint(
            "ad_unique_account_id_and_title", type_="unique"
        )
        batch_op.create_index(
            "ad_unique_id_title", ["id", "title"], unique=False
        )

    with op.batch_alter_table("account", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("name", mysql.VARCHAR(length=50), nullable=False)
        )
        batch_op.add_column(
            sa.Column("nif", mysql.VARCHAR(length=50), nullable=False)
        )
        batch_op.create_index("account_name", ["account_name"], unique=False)
        batch_op.alter_column(
            "company_name",
            existing_type=mysql.VARCHAR(length=50),
            nullable=False,
        )
        batch_op.alter_column(
            "account_name",
            existing_type=sa.String(length=60),
            type_=mysql.VARCHAR(length=50),
            nullable=False,
            comment=None,
            existing_comment="Account can have any name, it is an internal reference",
        )
        batch_op.alter_column(
            "address_id",
            existing_type=mysql.BIGINT(display_width=20),
            nullable=False,
            existing_comment="Address id",
        )
        batch_op.drop_column("tax_number")
        batch_op.drop_column("country")

    # ### end Alembic commands ###
