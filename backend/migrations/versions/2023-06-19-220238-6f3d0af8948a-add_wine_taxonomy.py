"""Add wine taxonomy

Revision ID: 6f3d0af8948a
Revises: 3a8c3ff24c8f
Create Date: 2023-06-19 22:02:38.468386

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "6f3d0af8948a"
down_revision = "3a8c3ff24c8f"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "address",
        sa.Column("id", sa.BigInteger(), nullable=False, comment="Primary key"),
        sa.Column("status_id", sa.Integer(), nullable=False, comment="Status id"),
        sa.Column(
            "account_id",
            sa.BigInteger(),
            nullable=True,
            comment="Associate address with Account id",
        ),
        sa.Column(
            "store_id",
            sa.BigInteger(),
            nullable=True,
            comment="Associate address with Store id",
        ),
        sa.Column(
            "user_id",
            sa.BigInteger(),
            nullable=True,
            comment="Associate address with User id",
        ),
        sa.Column(
            "address_type",
            sa.Enum(
                "account",
                "store",
                "user",
                "billing",
                "pickup",
                name="address_type",
            ),
            nullable=False,
            comment="Address type (e.g. account,store,user,billing,pickup)",
        ),
        sa.Column(
            "designation",
            sa.String(length=50),
            nullable=True,
            comment="Designation is the internal name of the address",
        ),
        sa.Column(
            "is_default_address",
            sa.SmallInteger(),
            nullable=True,
            comment="Is default address e.g. 0=No; 1=Yes",
        ),
        sa.Column(
            "country",
            sa.String(length=2),
            nullable=True,
            comment="Country alpha2",
        ),
        sa.Column(
            "district",
            sa.String(length=50),
            nullable=True,
            comment="District name",
        ),
        sa.Column(
            "municipality",
            sa.String(length=50),
            nullable=True,
            comment="Municipality name",
        ),
        sa.Column(
            "parish",
            sa.String(length=50),
            nullable=True,
            comment="Parish name",
        ),
        sa.Column("zone", sa.String(length=50), nullable=True, comment="Zone"),
        sa.Column(
            "street",
            sa.String(length=50),
            nullable=True,
            comment="Street name",
        ),
        sa.Column("floor", sa.String(length=50), nullable=True, comment="Floor"),
        sa.Column("number", sa.String(length=50), nullable=True, comment="Number"),
        sa.Column(
            "postal_code",
            sa.String(length=50),
            nullable=True,
            comment="Postal code",
        ),
        sa.Column(
            "additional_details",
            sa.String(length=250),
            nullable=True,
            comment="Additional details e.g. known places",
        ),
        sa.Column("email", sa.String(length=50), nullable=True, comment="Email"),
        sa.Column("phone", sa.String(length=50), nullable=True, comment="Phone"),
        sa.Column(
            "phone_secondary",
            sa.String(length=50),
            nullable=True,
            comment="Phone secondary",
        ),
        sa.Column("fax", sa.String(length=50), nullable=True, comment="Fax"),
        sa.Column(
            "person",
            sa.String(length=50),
            nullable=True,
            comment="Person responsible on this address",
        ),
        sa.PrimaryKeyConstraint("id"),
        mysql_charset="utf8mb4",
        mysql_collate="utf8mb4_general_ci",
        mysql_engine="InnoDB",
    )
    with op.batch_alter_table("address", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_address_account_id"), ["account_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_address_is_default_address"),
            ["is_default_address"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_address_store_id"), ["store_id"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_address_user_id"), ["user_id"], unique=False
        )

    op.create_table(
        "type",
        sa.Column("id", sa.BigInteger(), nullable=False, comment="Primary key"),
        sa.Column(
            "name",
            sa.String(length=50),
            nullable=True,
            comment="Name of wine type",
        ),
        sa.PrimaryKeyConstraint("id"),
        mysql_charset="utf8mb4",
        mysql_collate="utf8mb4_general_ci",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "verification",
        sa.Column("id", sa.BigInteger(), nullable=False, comment="Primary key"),
        sa.Column("user_id", sa.BigInteger(), nullable=False, comment="User id"),
        sa.Column(
            "action",
            sa.String(length=10),
            nullable=False,
            comment="Verification action e.g. user",
        ),
        sa.Column(
            "token",
            sa.String(length=64),
            nullable=False,
            comment="Unique token",
        ),
        sa.Column(
            "date_created",
            sa.DateTime(timezone=True),
            nullable=True,
            comment="Date when token was created",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("token"),
        sa.UniqueConstraint("user_id", "action", "token", name="ad_user_action_token"),
        mysql_charset="utf8mb4",
        mysql_collate="utf8mb4_general_ci",
        mysql_engine="InnoDB",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("verification")
    op.drop_table("type")
    with op.batch_alter_table("address", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_address_user_id"))
        batch_op.drop_index(batch_op.f("ix_address_store_id"))
        batch_op.drop_index(batch_op.f("ix_address_is_default_address"))
        batch_op.drop_index(batch_op.f("ix_address_account_id"))

    op.drop_table("address")
    # ### end Alembic commands ###
