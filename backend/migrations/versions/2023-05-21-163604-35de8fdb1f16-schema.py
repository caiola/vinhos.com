"""Schema

Revision ID: 35de8fdb1f16
Revises: 4f2e2c180af
Create Date: 2023-05-21 16:36:04.310890

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "35de8fdb1f16"
down_revision = "4f2e2c180af"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "account",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("status_id", sa.Integer(), nullable=False, comment="Status id"),
        sa.Column("address_id", sa.BigInteger(), nullable=False, comment="Address id"),
        sa.Column("account_name", sa.String(length=50), nullable=False),
        sa.Column("nif", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("company_name", sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("account_name"),
        mysql_charset="utf8mb4",
        mysql_collate="utf8mb4_general_ci",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "status",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("description", sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        mysql_charset="utf8mb4",
        mysql_collate="utf8mb4_general_ci",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "store",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("status_id", sa.Integer(), nullable=False, comment="Status id"),
        sa.Column("address_id", sa.BigInteger(), nullable=False, comment="Address id"),
        sa.Column(
            "store_name", sa.String(length=50), nullable=False, comment="Store name"
        ),
        sa.Column(
            "gps_latitude",
            sa.String(length=25),
            nullable=False,
            comment="GPS coordinates, latitude",
        ),
        sa.Column(
            "gps_longitude",
            sa.String(length=25),
            nullable=False,
            comment="GPS coordinates, longitude",
        ),
        sa.Column(
            "contact_email", sa.String(length=50), nullable=False, comment="Email"
        ),
        sa.Column(
            "contact_phone", sa.String(length=50), nullable=False, comment="Phone"
        ),
        sa.Column(
            "contact_phone_description",
            sa.String(length=50),
            nullable=False,
            comment="Phone description (e.g. call to land line)",
        ),
        sa.Column(
            "contact_phone_secondary",
            sa.String(length=50),
            nullable=False,
            comment="Secondary phone",
        ),
        sa.Column(
            "contact_phone_secondary_description",
            sa.String(length=50),
            nullable=False,
            comment="Secondary phone description (e.g. mobile phone)",
        ),
        sa.Column(
            "schedule",
            sa.String(length=50),
            nullable=False,
            comment="Open hours (e.g. Open 8h to 24h, Mon to Sat)",
        ),
        sa.Column(
            "social_facebook",
            sa.String(length=50),
            nullable=False,
            comment="Address for social network Facebook",
        ),
        sa.Column(
            "social_twitter",
            sa.String(length=50),
            nullable=False,
            comment="Address for social network Twitter",
        ),
        sa.Column(
            "social_instagram",
            sa.String(length=50),
            nullable=False,
            comment="Address for social network Instagram",
        ),
        sa.Column(
            "social_tiktok",
            sa.String(length=50),
            nullable=False,
            comment="Address for social network Tiktok",
        ),
        sa.PrimaryKeyConstraint("id"),
        mysql_charset="utf8mb4",
        mysql_collate="utf8mb4_general_ci",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "user",
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("status_id", sa.Integer(), nullable=False, comment="Status id"),
        sa.Column(
            "first_name", sa.String(length=150), nullable=False, comment="First name"
        ),
        sa.Column(
            "middle_name", sa.String(length=150), nullable=False, comment="Middle name"
        ),
        sa.Column(
            "last_name", sa.String(length=150), nullable=False, comment="Last name"
        ),
        sa.Column(
            "password_hash",
            sa.String(length=128),
            nullable=False,
            comment="Password hash",
        ),
        sa.PrimaryKeyConstraint("id"),
        mysql_charset="utf8mb4",
        mysql_collate="utf8mb4_general_ci",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "ad",
        sa.Column("id", sa.BigInteger(), nullable=False, comment="Primary key"),
        sa.Column("status_id", sa.Integer(), nullable=False, comment="Status id"),
        sa.Column("address_id", sa.BigInteger(), nullable=False, comment="Address id"),
        sa.Column("uuid", sa.String(length=36), nullable=False, comment="UUID"),
        sa.Column("title", sa.String(length=100), nullable=False, comment="Title"),
        sa.Column("description", sa.Text(), nullable=False, comment="Description"),
        sa.Column("account_id", sa.BigInteger(), nullable=False, comment="Account id"),
        sa.Column("store_id", sa.BigInteger(), nullable=False, comment="Store id"),
        sa.Column("user_id", sa.BigInteger(), nullable=False, comment="User id"),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["account.id"],
            name="ad_account_id_fk_account_id",
            onupdate="RESTRICT",
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["store_id"],
            ["store.id"],
            name="ad_store_id_fk_store_id",
            onupdate="RESTRICT",
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
            name="ads_user_id_fk_user_id",
            onupdate="RESTRICT",
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id", "title", name="ad_unique_id_title"),
        sa.UniqueConstraint("uuid"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("ad")
    op.drop_table("user")
    op.drop_table("store")
    op.drop_table("status")
    op.drop_table("account")
    # ### end Alembic commands ###
