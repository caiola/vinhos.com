name: Code Quality

on: [ push, pull_request ]

jobs:

  test:
    runs-on: ubuntu-latest
    
    container:
      image: python:3.10
      
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Cache Poetry
        id: cachepoetry
        uses: actions/cache@v2
        with:
          path: ${{ env.HOME }}/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-

      - name: Cache Poetry dependencies
        id: cachepoetrydeps
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetrydeps-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetrydeps-

      - name: Set up Python 3.10
        uses: actions/setup-python@v1
        with:
          python-version: '3.10'
        if: steps.cachepoetrydeps.outputs.cache-hit != 'true'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        # if: steps.cachepoetry.outputs.cache-hit != 'true'

      - name: Install Dependencies
        working-directory: ./backend
        run: poetry install
        if: steps.cachepoetrydeps.outputs.cache-hit != 'true'

      - name: Black
        working-directory: ./backend
        run: poetry run black . --check

      - name: Isort
        working-directory: ./backend
        run: poetry run isort . --check-only --profile black

      - name: Run tests and generate coverage
        working-directory: ./backend
        # Turn result to always true to run codecoverage
        run: poetry run pytest test/ -vv --cov=api --cov-report=xml || true

      - name: ls backend
        run: |
          ls ./backend
          ls ./backend/test
          echo "Running Codecov -> ls action ..."

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          working-directory: ./backend
          # coverage report
          files: ./coverage.xml

